{
  "$schema": "https://json.schemastore.org/eslintrc.json",
  "plugins": ["@typescript-eslint", "require-form-method"],
  "parserOptions": {
    "project": "tsconfig.json"
  },
  "extends": [
    "next",
    "next/core-web-vitals",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "prettier"
  ],
  "rules": {
    // sort imports
    "import/order": "error",

    // allow {} even though it's unsafe but comes handy
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "{}": false
        }
      }
    ],

    // we allow empty interfaces
    "no-empty-pattern": "off",
    "@typescript-eslint/no-empty-interface": "off",

    // we allow empty functions
    "@typescript-eslint/no-empty-function": "off",

    // we sometimes use async functions that don't await anything
    "@typescript-eslint/require-await": "off",

    // make sure to `await` inside tryâ€¦catch
    "@typescript-eslint/return-await": ["error", "in-try-catch"],

    // allow unused vars prefixed with `_`
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }
    ],

    // numbers and booleans are fine in template strings
    "@typescript-eslint/restrict-template-expressions": [
      "error",
      { "allowNumber": true, "allowBoolean": true }
    ],

    // for security reasons, always require forms to provide method="post"
    "require-form-method/require-form-method": "error",

    // for security reasons, always require buttons to provide type="button" ("submit" on rare occasions)
    "react/button-has-type": ["error", { "button": true, "submit": true, "reset": false }]
  },
  "overrides": [
    {
      "files": ["*.test.tsx"],
      "rules": {
        // let's make our lives easier in tests
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-unsafe-member-access": "off",
        "@typescript-eslint/no-unsafe-return": "off"
      }
    },
    {
      // https://github.com/testing-library/eslint-plugin-testing-library#run-the-plugin-only-against-test-files
      "files": ["**/__tests__/**/*.[jt]s?(x)", "**/?(*.)+(spec|test).[jt]s?(x)"],
      "extends": ["plugin:testing-library/react"]
    }
  ],
  "ignorePatterns": ["*.js", "*.jsx"]
}
